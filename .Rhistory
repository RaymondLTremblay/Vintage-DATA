geom_smooth()+
guides(color = 'legend')+
guides(size="none")+
scale_colour_gradient(low = "grey", high = "orange", na.value = NA)+
coord_cartesian(ylim= c(7.0, 8.4), xlim=c(5.85, 14.85))+
scale_x_continuous(breaks=seq(4.85, 14.85, len=11))+
xlab("Body length of tadpole")+
ylab("Length of blood corpuscules")
ggplot(BCT2, aes(body_lenght, length_corpuscles))+
geom_count(aes(color=..n..))+
geom_smooth(method=lm)+
guides(color = 'legend')+
guides(size="none")+
scale_colour_gradient(low = "grey", high = "orange", na.value = NA)+
coord_cartesian(ylim= c(7.0, 8.4), xlim=c(5.85, 14.85))+
scale_x_continuous(breaks=seq(4.85, 14.85, len=11))+
xlab("Body length of tadpole")+
ylab("Length of blood corpuscules")
summary(model)
model=lm(length_corpuscles~body_lenght, data=BCT2)
summary(model)
cor(BCT2$length_corpuscles, BCT2$body_lenght)
cor(BCT2$length_corpuscles, BCT2$body_lenght)
library(tidyverse)
library(janitor)
library(reshape) # for the "untable" function
library(gt)
library(readxl)
Table_A_lenCorpuscles_Bodylen <- read_excel("DATA/Red_blood_cells/Table_A_lenCorpuscles_Bodylen.xlsx")
gt(head(Table_A_lenCorpuscles_Bodylen, n=3))
#length(Table_A_lenCorpuscles_Bodylen$Num_individuals)
#sum(Table_A_lenCorpuscles_Bodylen$Num_individuals)
BCT=as.data.frame(Table_A_lenCorpuscles_Bodylen) # VERY IMPORTANT STEP, convert to a data frame
#BCT$length_corpuscles=as.character(BCT$length_corpuscles)
#BCT$body_lenght=as.character(BCT$body_lenght)
library(readr)
Mother_age_BW_Females_T2ii <- read_csv("Mother_age_BW_Females_T2ii.csv")
View(Mother_age_BW_Females_T2ii)
knitr::opts_chunk$set(echo = TRUE)
mini=tribble( ~mother_age,~non_survivors,~total_birth,~birth_weight,
14,0,1,3.5,
16,1,1,4,
17,0,1,4.5,
18,0,2,5,
19,0,4,6,
20,0,5,6.5,
22,3,5,7,
25,4,10,7.5)
library(tidyverse)
library(ggplot2)
library(gt)
library(reshape)
library(janitor)
library(caret)
mini=tribble( ~mother_age,~non_survivors,~total_birth,~birth_weight,
14,0,1,3.5,
16,1,1,4,
17,0,1,4.5,
18,0,2,5,
19,0,4,6,
20,0,5,6.5,
22,3,5,7,
25,4,10,7.5)
mini
sum(mini$total_birth- mini$non_survivors)
library(readr)
T2i <- read_csv("T2i.csv")
library(readr)
Mother_age_BW_Females_T2ii <- read_csv("Mother_age_BW_Females_T2ii.csv")
df=as.data.frame(T2i)%>%
mutate(survivors = total_birth - non_survivors)
df
sum(df$total_birth)
## untable non-survivors
df1<- untable(df[,c(1,2,4,5)], num = df[,"non_survivors"])%>%
filter(non_survivors >0)%>%
mutate(Alive_Dead = ifelse(non_survivors >0,0, NA))
df1
## untable survivors
df2<- untable(df[,c(1,2,5,4)], num = df[,"survivors"])%>%
filter(survivors >0)%>%
mutate(Alive_Dead = ifelse(survivors >0, 1, NA))
df2
df5=bind_rows(df1, df2)%>%
mutate(sex = "male")# Function in dplyr
df5 %>% arrange(mother_age)
row.names(df5)<-NULL  # this removes the row names
df5 %>% arrange(mother_age)
af=as.data.frame(T2ii)%>%
mutate(survivors = total_birth - non_survivors)
df=as.data.frame(T2i)%>%
mutate(survivors = total_birth - non_survivors)
df
sum(df$total_birth)
## untable non-survivors
df1<- untable(df[,c(1,2,4,5)], num = df[,"non_survivors"])%>%
filter(non_survivors >0)%>%
mutate(Alive_Dead = ifelse(non_survivors >0,0, NA))
df1
## untable survivors
df2<- untable(df[,c(1,2,5,4)], num = df[,"survivors"])%>%
filter(survivors >0)%>%
mutate(Alive_Dead = ifelse(survivors >0, 1, NA))
df2
df5=bind_rows(df1, df2)%>%
mutate(sex = "male")# Function in dplyr
df5 %>% arrange(mother_age)
row.names(df5)<-NULL  # this removes the row names
df5 %>% arrange(mother_age)
af=as.data.frame(T2ii)%>%
mutate(survivors = total_birth - non_survivors)
knitr::opts_chunk$set(echo = TRUE)
Sys.Date()
library(tidyverse)
library(ggplot2)
library(gt)
library(reshape)
library(janitor)
library(caret)
mini=tribble( ~mother_age,~non_survivors,~total_birth,~birth_weight,
14,0,1,3.5,
16,1,1,4,
17,0,1,4.5,
18,0,2,5,
19,0,4,6,
20,0,5,6.5,
22,3,5,7,
25,4,10,7.5)
mini
sum(mini$total_birth- mini$non_survivors)
library(readr)
T2i <- read_csv("T2i.csv")
library(readr)
Mother_age_BW_Females_T2ii <- read_csv("Mother_age_BW_Females_T2ii.csv")
df=as.data.frame(T2i)%>%
mutate(survivors = total_birth - non_survivors)
df
sum(df$total_birth)
## untable non-survivors
df1<- untable(df[,c(1,2,4,5)], num = df[,"non_survivors"])%>%
filter(non_survivors >0)%>%
mutate(Alive_Dead = ifelse(non_survivors >0,0, NA))
df1
## untable survivors
df2<- untable(df[,c(1,2,5,4)], num = df[,"survivors"])%>%
filter(survivors >0)%>%
mutate(Alive_Dead = ifelse(survivors >0, 1, NA))
df2
df5=bind_rows(df1, df2)%>%
mutate(sex = "male")# Function in dplyr
df5 %>% arrange(mother_age)
row.names(df5)<-NULL  # this removes the row names
df5 %>% arrange(mother_age)
af=as.data.frame(T2ii)%>%
mutate(survivors = total_birth - non_survivors)
af=as.data.frame(T2i)%>%
mutate(survivors = total_birth - non_survivors)
af
sum(af$total_birth)
## untable non-survivors
af1<- untable(af[,c(1,2,4,5)], num = af[,"non_survivors"])%>%
filter(non_survivors >0)%>%
mutate(Alive_Dead = ifelse(non_survivors >0,0, NA))
af1
## untable survivors
af2<- untable(af[,c(1,2,5,4)], num = af[,"survivors"])%>%
filter(survivors >0)%>%
mutate(Alive_Dead = ifelse(survivors >0, 1, NA))
af2
af5=bind_rows(af1, af2)%>%
mutate(sex = "female")# Function in dplyr
af5 %>% arrange(mother_age)
row.names(af5)<-NULL  # this removes the row names
af5 %>% arrange(mother_age)
view(af5)
qf=bind_rows(af5, df5)
qf %>% arrange(birth_weight)
row.names(qf)<-NULL
qf
af=as.data.frame(T2i)%>%
mutate(survivors = total_birth - non_survivors)
af
sum(af$total_birth)
## untable non-survivors
af1<- untable(af[,c(1,2,4,5)], num = af[,"non_survivors"])%>%
filter(non_survivors >0)%>%
mutate(Alive_Dead = ifelse(non_survivors >0,0, NA))
af1
## untable survivors
af2<- untable(af[,c(1,2,5,4)], num = af[,"survivors"])%>%
filter(survivors >0)%>%
mutate(Alive_Dead = ifelse(survivors >0, 1, NA))
af2
af5=bind_rows(af1, af2)%>%
mutate(sex = "female")# Function in dplyr
af5 %>% arrange(mother_age)
row.names(af5)<-NULL  # this removes the row names
af5 %>% arrange(mother_age)
qf=bind_rows(af5, df5)
qf %>% arrange(birth_weight)
row.names(qf)<-NULL
qf
model <- glm( Alive_Dead ~ birth_weight + mother_age,
data = df5, family = binomial)
summary(model)
coefficients(model)
par(mfrow=c(2,2))
plot(model)
model <- glm( Alive_Dead ~ birth_weight + mother_age,
data = df5, family = binomial)
summary(model)
coefficients(model)
par(mfrow=c(2,2))
plot(model)
library(tidyverse)
library(gridExtra)
library(cowplot)
binomial_smooth <-function(...){
geom_smooth(method = "glm", method.args = list(family = "binomial"), ...)
}
a<-ggplot(qf, aes(birth_weight, Alive_Dead))+
geom_jitter( aes(colour= sex), size = .2)+
binomial_smooth()
b<-ggplot(qf, aes(mother_age, Alive_Dead))+
geom_jitter(size=.2, aes(colour=sex))+
binomial_smooth()
p<-plot_grid(a,b)
p
ggsave("a+b.png", p, width = 10, height = 7)
a<-ggplot(qf, aes(birth_weight, Alive_Dead))+
geom_jitter( aes(colour= sex), size = .2, width = .1)+
binomial_smooth()
b
a<-ggplot(qf, aes(birth_weight, Alive_Dead))+
geom_jitter( aes(colour= sex), size = .2, height = .1)+
binomial_smooth()
a
b<-ggplot(qf, aes(mother_age, Alive_Dead))+
geom_jitter(size=.2, aes(colour=sex), height = .1)+
binomial_smooth()
b
p<-plot_grid(a,b)
p
p
ggsave("a+b.png", p, width = 10, height = 7)
model1 <- glm(alive_dead ~ mother_age, family = binomial)
model1 <- glm(alive_dead ~ mother_age, family = binomial, data=Mother_age_BW_Females_T2ii )
names(Mother_age_BW_Females_T2ii)
model1 <- glm(alive_dead ~ mother_age, family = binomial, data=T2i )
df5=bind_rows(df1, df2)%>%
mutate(sex = "male")# Function in dplyr
df5 %>% arrange(mother_age)
row.names(df5)<-NULL  # this removes the row names
df5 %>% arrange(mother_age)
names(df5)
model1 <- glm(Alive_Dead ~ mother_age, family = binomial, data=df5 )
x2 <- seq(min(mother_age), max(mother_age), 1.0)
knitr::opts_chunk$set(echo = TRUE)
Sys.Date()
library(tidyverse)
library(ggplot2)
library(gt)
library(reshape)
library(janitor)
library(caret)
mini=tribble( ~mother_age,~non_survivors,~total_birth,~birth_weight,
14,0,1,3.5,
16,1,1,4,
17,0,1,4.5,
18,0,2,5,
19,0,4,6,
20,0,5,6.5,
22,3,5,7,
25,4,10,7.5)
gt(mini)
T2i <- read_csv("csv_files/T2i.csv")
library(readr)
T2i <- read_csv("T2i.csv")
View(T2i)
library(readr)
T2i <- read_csv("T2i.csv")
df=as.data.frame(T2i)%>%
mutate(survivors = total_birth - non_survivors)
df
sum(df$total_birth)
df1<- untable(df[,c(1,2,4,5)], num = df[,"non_survivors"])%>%
filter(non_survivors >0)%>%
mutate(Alive_Dead = ifelse(non_survivors >0,0, NA))
df1
df2<- untable(df[,c(1,2,5,4)], num = df[,"survivors"])%>%
filter(survivors >0)%>%
mutate(Alive_Dead = ifelse(survivors >0, 1, NA))
df5=bind_rows(df1, df2) # Function in dplyr
df5 %>% arrange(mother_age)
row.names(df5)<-NULL  # this removes the row names
df5 %>% arrange(mother_age)
df5 %>% arrange(mother_age)
b<-ggplot(qf, aes(mother_age, Alive_Dead))+
geom_jitter(size=.2, aes(colour=sex), height = .1)+
binomial_smooth()+
geom_smooth()
b
b
p<-plot_grid(a,b)
p
b<-ggplot(qf, aes(mother_age, Alive_Dead))+
geom_jitter(size=.2, aes(colour=sex), height = .1)+
binomial_smooth()+
geom_smooth(colour="red")
b
b
p<-plot_grid(a,b)
p<-plot_grid(a,b)
p
c<-ggplot(qf, aes(mother_age, Alive_Dead))+
geom_jitter(size=.2, aes(colour=sex), height = .1)+
binomial_smooth()+
geom_smooth(colour="red")+
scale_y_continuous(breaks=c(0.8:1.0))
c
c<-ggplot(qf, aes(mother_age, Alive_Dead))+
geom_jitter(size=.2, aes(colour=sex), height = .1)+
binomial_smooth()+
geom_smooth(colour="red")+
scale_y_continuous(limitsd=c(0.8:1.1))
c<-ggplot(qf, aes(mother_age, Alive_Dead))+
geom_jitter(size=.2, aes(colour=sex), height = .1)+
binomial_smooth()+
geom_smooth(colour="red")+
scale_y_continuous(limits=c(0.8:1.1))
c
c<-ggplot(qf, aes(mother_age, Alive_Dead))+
geom_jitter(size=.2, aes(colour=sex), height = .1)+
binomial_smooth()+
geom_smooth(colour="red")+
scale_y_continuous(limits=c(0.8:1.3))
c
c<-ggplot(qf, aes(mother_age, Alive_Dead))+
geom_jitter(size=.2, aes(colour=sex), height = .1)+
binomial_smooth()+
geom_smooth(colour="red")+
scale_y_continuous(limits=c(0.8:2))
c
c<-ggplot(qf, aes(mother_age, Alive_Dead))+
geom_jitter(size=.2, aes(colour=sex), height = .1)+
binomial_smooth()+
geom_smooth(colour="red")+
scale_y_continuous(limits=c(0.8, 2))
c
c<-ggplot(qf, aes(mother_age, Alive_Dead))+
geom_jitter(size=.2, aes(colour=sex), height = .1)+
binomial_smooth()+
geom_smooth(colour="red")+
scale_y_continuous(limits=c(0.8, 1.4))
c
c<-ggplot(qf, aes(mother_age, Alive_Dead))+
geom_jitter(size=.2, aes(colour=sex), height = .1)+
binomial_smooth()+
geom_smooth(colour="red")+
scale_y_continuous(limits=c(0.8, 1.15))
c
c<-ggplot(qf, aes(mother_age, Alive_Dead))+
scale_y_continuous(limits=c(0.8, 1.15))+
geom_jitter(size=.2, aes(colour=sex), height = .1)+
binomial_smooth()+
geom_smooth(colour="red")
c
c<-ggplot(qf, aes(mother_age, Alive_Dead))+
geom_jitter(size=.2, aes(colour=sex), height = .1)+
binomial_smooth()+
geom_smooth(colour="red")+
coord_cartesian(ylim=c(0.8, 1.15))
c
# Modelo LOESS
p<-plot_grid(a,b, c)
p
knitr::opts_chunk$set(echo = TRUE)
gt(BCT3) %>%
tab_header(title = md("Body length of tadpoles")) %>%
tab_style(
locations = cells_column_labels(columns = everything()),
style     = list(
#Give a thick border below
cell_borders(sides = "bottom", weight = px(3)),
#Make text bold
cell_text(weight = "bold")
)
) %>%
tab_style(
style = cell_borders(sides = "right", color = "black",
style = "dashed", weight = px(3)),
locations = cells_body(
columns = c(length_corpuscles)
)
) %>%
tab_source_note(source_note = "Pearson, K. (1909). A Biometric Study of the Red Blood Corpuscles of the Common Tadpole (Rana Temporaria), from the Measurements of Ernest Warren. Biometrika, 402-419.") %>%
data_color(
columns = c("5.35", "5.85", "6.35",	"6.85",	"7.35",	"7.85",	"8.35",
"8.85",	"9.35",	"9.85",	"10.35",	"10.85",	"11.35",	"11.85",	"12.35",	"13.35",	"13.84",	"13.85"),
colors = scales::col_numeric(
palette = c("white", "orange", "brown"),
domain = c(0, 30))
)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(reshape) # for the "untable" function
library(gt)
library(readxl)
Table_A_lenCorpuscles_Bodylen <- read_excel("DATA/Red_blood_cells/Table_A_lenCorpuscles_Bodylen.xlsx")
gt(head(Table_A_lenCorpuscles_Bodylen, n=3))
#length(Table_A_lenCorpuscles_Bodylen$Num_individuals)
#sum(Table_A_lenCorpuscles_Bodylen$Num_individuals)
BCT=as.data.frame(Table_A_lenCorpuscles_Bodylen) # VERY IMPORTANT STEP, convert to a data frame
#BCT$length_corpuscles=as.character(BCT$length_corpuscles)
#BCT$body_lenght=as.character(BCT$body_lenght)
head(BCT, n=5)
BCT[10:14,]
BCT2=untable(BCT[,c(1,2)], num =BCT[,3])
#BCT2
BCT2a=BCT2 %>%
tabyl(length_corpuscles, body_lenght)
#BCT2a
BCT3<-BCT2a %>%
select(1,10:19, 2:9)
BCT3$length_corpuscles = as.factor(BCT3$length_corpuscles)
gt(BCT3) %>%
tab_header(title = md("Body length of tadpoles")) %>%
tab_style(
locations = cells_column_labels(columns = everything()),
style     = list(
#Give a thick border below
cell_borders(sides = "bottom", weight = px(3)),
#Make text bold
cell_text(weight = "bold")
)
) %>%
tab_style(
style = cell_borders(sides = "right", color = "black",
style = "dashed", weight = px(3)),
locations = cells_body(
columns = c(length_corpuscles)
)
) %>%
tab_source_note(source_note = "Pearson, K. (1909). A Biometric Study of the Red Blood Corpuscles of the Common Tadpole (Rana Temporaria), from the Measurements of Ernest Warren. Biometrika, 402-419.") %>%
data_color(
columns = c("5.35", "5.85", "6.35",	"6.85",	"7.35",	"7.85",	"8.35",
"8.85",	"9.35",	"9.85",	"10.35",	"10.85",	"11.35",	"11.85",	"12.35",	"13.35",	"13.84",	"13.85"),
colors = scales::col_numeric(
palette = c("white", "orange", "brown"),
domain = c(0, 30))
)
#BCT2
## Mean and standar deviation of body length
BCT2 %>%
summarize(meanBL=mean(body_lenght),
SD=sd(body_lenght))
## Mean and standar deviation of length of corpuscules
BCT2 %>%
summarize(mean_BC=mean(length_corpuscles),
SD_BL=sd(length_corpuscles))
ggplot(BCT2, aes(body_lenght, length_corpuscles))+
geom_count(aes(color=..n..))+
geom_smooth(method=lm)+
guides(color = 'legend')+
guides(size="none")+
scale_colour_gradient(low = "grey", high = "orange", na.value = NA)
ggplot(BCT2, aes(body_lenght, length_corpuscles))+
geom_count(aes(color=..n..))+
geom_smooth(method=lm)+
guides(color = 'legend')+
guides(size="none")+
scale_colour_gradient(low = "grey", high = "orange", na.value = NA)+
coord_cartesian(ylim= c(7.0, 8.4), xlim=c(5.85, 14.85))+
scale_x_continuous(breaks=seq(4.85, 14.85, len=11))+
xlab("Body length of tadpole")+
ylab("Length of blood corpuscules")
model=lm(length_corpuscles~body_lenght, data=BCT2)
summary(model)
cor(BCT2$length_corpuscles, BCT2$body_lenght)
BCT2a=BCT2 %>%
tabyl(length_corpuscles, body_lenght)
#BCT2a
BCT3<-BCT2a %>%
select(1,10:19, 2:9)
BCT3$length_corpuscles = as.factor(BCT3$length_corpuscles)
BCT2a=BCT2 %>%
tabyl(length_corpuscles, body_lenght)
#BCT2a
BCT3<-BCT2a %>%
select(1,10:19, 2:9)
BCT3$length_corpuscles = as.factor(BCT3$length_corpuscles)
BCT3
BCT2=untable(BCT[,c(1,2)], num =BCT[,3])
BCT2
#BCT2a
BCT3<-BCT2a %>%
select(1,10:19, 2:9)
BCT3$length_corpuscles = as.factor(BCT3$length_corpuscles)
BCT3
BCT2a
BCT3<-BCT2a %>%
select(1,10:19, 2:9)
#BCT2
## Mean and standar deviation of body length
BCT2 %>%
summarize(meanBL=mean(body_lenght),
SD=sd(body_lenght))
## Mean and standar deviation of length of corpuscules
BCT2 %>%
summarize(mean_BC=mean(length_corpuscles),
SD_BL=sd(length_corpuscles))
